0    == "0000001"   ==>  "-----"
1    == "1001111"   ==>  ".----"
2    == "0010010"   ==>  "..---"
3    == "0000110"   ==>  "...--"
4    == "1001100"   ==>  "....-"
5    == "0100100"   ==>  "....."
6    == "0100000"   ==>  "-...."
7    == "0001111"   ==>  "--..."
8    == "0000000"   ==>  "---.."
9    == "0000100"   ==>  "----."
A    == "0001000"   ==>  ".-"      
B(b) == "1100000"   ==>  "-..."
C    == "0110001"   ==>  "-.-."
D(d) == "1000010"   ==>  "-.."
E    == "0110000"   ==>  "."
F    == "0111000"   ==>  "..-."
G    == "01000000"  ==>  "--."			???(DP)
H    == "1001000"   ==>  "...."
I    == "1111001"   ==>  ".."
J    == "0000011"   ==>  ".---"
K    == "1001110"   ==>  "-.-"
L    == "1110001"   ==>  ".-.."
M    == "0011001"   ==>  "--"
N    == "1101010"   ==>  "-."
O    == "00000010"  ==>  "---"			???(DP)
P    == "0011000"   ==>  ".--."
Q    == "0001100"   ==>  "--.-"
R    == "1111010"   ==>  ".-."
S    == "01001000"  ==>  "..."
T    == "1110000"   ==>  "-"
U    == "1000001"   ==>  "..-"
V    == "1100011"   ==>  "...-"
W    ==  -------    ==>  ".--"
X    == "10010000"  ==>  "-..-"
Y    == "10011000"  ==>  "-.--"
Z    == "0010010"   ==>  "--.."

            

case hex_i is
            when "000000" =>
                seg_o <= "0000001"; -- 0
            when "000001" =>
                seg_o <= "1001111"; -- 1

            -- WRITE YOUR CODE HERE
            when "000010" =>
                seg_o <= "0010010"; -- 2

            when "000011" =>
                seg_o <= "0000110"; -- 3

            when "000100" =>
                seg_o <= "1001100"; -- 4

            when "000101" =>
                seg_o <= "0100100"; -- 5

            when "000110" =>
                seg_o <= "0100000"; -- 6

            when "000111" =>
                seg_o <= "0001111"; -- 7

            when "001000" =>
                seg_o <= "0000000"; -- 8

            -- WRITE YOUR CODE HERE
            when "001001" =>
                seg_o <= "0000100"; -- 9

            when "001010" =>
                seg_o <= "0001000"; -- A

            when "001011" =>
                seg_o <= "1100000"; -- b

            when "001100" =>
                seg_o <= "0110001"; -- C

            when "001101" =>
                seg_o <= "1000010"; -- d

            when "001110" =>
                seg_o <= "0110000"; -- E
            
            when "001111" =>
                seg_o <= "0111000"; -- F
            
            when "010000" =>
                seg_o <= "01000000"; -- G ????????????????????????DP
                
            when "010001" =>
                seg_o <= "1001000"; -- H        
                
            when "010010" =>
                seg_o <= "1111001"; -- I    
            
            when "010011" =>
                seg_o <= "0000011"; -- J
                
            when "010100" =>
                seg_o <= "1001110"; -- K
                
            when "010101" =>
                seg_o <= "1110001"; -- L   
            
            when "010110" =>
                seg_o <= "0011001"; -- M
            
            when "010111" =>
                seg_o <= "1101010"; -- N
            
            when "011000" =>
                seg_o <= "00000010"; -- O????????????????????????????
            
            when "011001" =>
                seg_o <= "0011000"; -- P
            
            when "011010" =>
                seg_o <= "0001100"; -- Q
            
            when "011011" =>
                seg_o <= "1111010"; -- R
            
            when "011100" =>
                seg_o <= "01001000"; -- S
            
            when "011101" =>
                seg_o <= "1110000"; -- T
            
            when "011110" =>
                seg_o <= "1000001"; -- U
            
            when "011111" =>
                seg_o <= "1100011"; -- V
            
            when "100000" =>
                seg_o <= "10010000"; -- X
            
            when "100001" =>
                seg_o <= "10011000"; -- Y
            
            when  others =>
                seg_o <= "0010010"; -- Z           